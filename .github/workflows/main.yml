name: Build HornetMM (cx_Freeze)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # allows manual runs

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Python (you can adjust version if needed)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cx_Freeze

      # 4️⃣ Build the executable
      - name: Build with cx_Freeze
        run: python setup.py build

     # 5️⃣ Rename build output for clarity (Windows)
      - name: Rename output folder (Windows)
        if: runner.os == 'Windows'
        run: |
          move build HornetMM_Windows
        shell: cmd

      # 5️⃣ Rename build output for clarity (macOS)
      - name: Rename output folder (macOS)
        if: runner.os == 'macOS'
        run: |
          mv build HornetMM_macOS

      # 5️⃣ Rename build output for clarity (Linux)
      - name: Rename output folder (Linux)
        if: runner.os == 'Linux'
        run: |
          mv build HornetMM_Linux

      # 6️⃣ Upload built executables as artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: HornetMM_${{ runner.os }}
          path: |
            HornetMM_Windows/**
            HornetMM_macOS/**
            HornetMM_Linux/**
          if-no-files-found: warn
